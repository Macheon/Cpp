#include <iostream>
#include <cstdlib>
#include <ctime>
#include <vector>
#include <windows.h>

using namespace std;

#define SIZE 1000000
#define MAX 5000000

int arr[SIZE] = { 0, };

void sort(int left, int right, int *p_piv) {
	int temp;
	for (int i = left; i <= right; i++) {
		if (i < *p_piv&&arr[i]>arr[*p_piv]) {
			if (i != *p_piv-1) {
				temp = arr[i];
				arr[i] = arr[*p_piv - 1];
				arr[*p_piv - 1] = temp;
			}
			temp = arr[*p_piv -1 ];
			arr[*p_piv - 1] = arr[*p_piv];
			arr[*p_piv] = temp;
			*p_piv -= 1;
			i -= 1;
		}
		else if (i > *p_piv && arr[i] < arr[*p_piv]){
			if (i != *p_piv + 1) {
				temp = arr[i];
				arr[i] = arr[*p_piv + 1];
				arr[*p_piv + 1] = temp;
			}
			temp = arr[*p_piv +1 ];
			arr[*p_piv + 1] = arr[*p_piv];
			arr[*p_piv] = temp;
			*p_piv += 1;
		}
	}
}

void QuickSort(int left, int right) {
	int pivot = (left + right) / 2;
	sort(left, right, &pivot);
	if (left < pivot - 1)QuickSort(left, pivot - 1);
	if (right > pivot + 1)QuickSort(pivot + 1, right);
}

int main(void) {
	ios::sync_with_stdio(false);
	srand((unsigned int)time(NULL));

	int size;
	cout << "input size in integer over zero : ";
	cin >> size;
	while (true) {
		for (int i = 0; i < size - 1; i++) {
			arr[i + 1] = arr[i] + rand() % 2;
		}
		for (int i = 0; i < size; i++) {
			int n = rand() % size;
			if (n != i) {
				int temp = arr[i];
				arr[i] = arr[n];
				arr[n] = temp;
			}
		}
		for (int i = 0; i < size; i++) {
			int n = rand() % size;
			if (n != i) {
				int temp = arr[i];
				arr[i] = arr[n];
				arr[n] = temp;
			}
		}
		//

		int time = GetTickCount();
		QuickSort(0, size - 1);
		time = GetTickCount() - time;

		cout << '\n';

		cout << "Time record : " << time << "ms";
	}
	int q;
	cin >> q;
}
